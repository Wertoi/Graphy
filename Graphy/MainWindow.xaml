<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Graphy"
        xmlns:cc="clr-namespace:Graphy.CustomControl"
        xmlns:view="clr-namespace:Graphy.View"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Graphy.MainWindow"
        mc:Ignorable="d"
        Title="Graphy" Height="750" Width="480" WindowStartupLocation="CenterScreen" Icon="Icon/Graphy_Icon.ico">

    <Grid UseLayoutRounding="True">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Margin="20,25,20,10" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel Orientation="Vertical" Grid.IsSharedSizeScope="True">

                    <TextBlock Text="{local:Loc MainWindow_General_Title}" FontSize="18" Foreground="{StaticResource PrimaryColorDark}"/>

                    <TextBlock VerticalAlignment="Center" Margin="0,25,0,7">
                        <Run Text=">" Foreground="{StaticResource SecondaryColor}" FontWeight="Bold" />
                        <Run Text="{local:Loc MainWindow_SelectPart_Title}" />
                    </TextBlock>

                    <StackPanel Orientation="Horizontal">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,5,0,0"
                            Visibility="{Binding CatiaViewModel.IsPartDocumentCollectionEmpty, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}">

                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource NoDocumentIcon}"/>
                                </Canvas>
                            </Viewbox>

                            <TextBlock Text="{local:Loc MainWindow_SelectPart_NoPart}" Foreground="#FFA6A6A6" VerticalAlignment="Center"/>

                        </StackPanel>

                        <ComboBox ItemsSource="{Binding CatiaViewModel.PartDocumentCollection, Source={StaticResource Locator}, Mode=OneWay}"
                                  SelectedItem="{Binding CatiaViewModel.SelectedPartDocument, Source={StaticResource Locator}, Mode=TwoWay}" VerticalContentAlignment="Center" Padding="5,8,15,8"
                                  Visibility="{Binding CatiaViewModel.IsPartDocumentCollectionEmpty, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Rectangle Width="1" Fill="#FFBFBFBF" Margin="10,2,5,2"/>

                        <Button Style="{StaticResource NormalButton}" Margin="5,0,0,0"
                                Command="{Binding CatiaViewModel.OpenDocumentCommand, Source={StaticResource Locator}}"
                                IsEnabled="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.IsApplicationOpen}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource OpenDocumentIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                    </StackPanel>


                    <Grid Margin="0,15,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="0,0,10,0" TextTrimming="CharacterEllipsis">
                            <Run Text=">" Foreground="{StaticResource SecondaryColor}" FontWeight="Bold" />
                            <Run Text="{local:Loc MainWindow_CatalogPart_Title}"/>
                        </TextBlock>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            
                            <CheckBox IsChecked="{Binding InputDataViewModel.IsDesignTableActivated, Source={StaticResource Locator}}"
                                  Style="{StaticResource YesNoCheckBox}"/>

                            <Rectangle Width="1" Fill="#FFBFBFBF" Margin="15,2,5,2"/>

                            <Button x:Name="DesignTableButton" Click="DesignTableButton_Click"
                                IsEnabled="{Binding InputDataViewModel.IsDesignTableActivated, Source={StaticResource Locator}}"
                                Style="{StaticResource NormalButton}">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource Link_ButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                            </Button>
                            
                        </StackPanel>

                    </Grid>
                    

                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock VerticalAlignment="Center" Margin="0,0,10,0">
                            <Run Text=">" Foreground="{StaticResource SecondaryColor}" FontWeight="Bold" />
                            <Run Text="Type de marquage :"/>
                        </TextBlock>

                        <RadioButton x:Name="TextRadioButton"
                                     Style="{StaticResource NormalToggledRadioButtonStyle}" VerticalContentAlignment="Center"
                                     IsChecked="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsText}">
                            <StackPanel Orientation="Horizontal">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource TextOptionToggleButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                                <TextBlock Text="Texte" Style="{StaticResource ToggleButtonWithImageTextBlockStyle}"/>
                            </StackPanel>
                        </RadioButton>

                        <RadioButton x:Name="IconRadioButton" Style="{StaticResource NormalToggledRadioButtonStyle}" Margin="10,0,0,0">
                            <StackPanel Orientation="Horizontal">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource IconOptionToggleButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                                <TextBlock Text="Icon" Style="{StaticResource ToggleButtonWithImageTextBlockStyle}"/>
                            </StackPanel>
                        </RadioButton>

                    </StackPanel>

                    <TextBlock Text="{local:Loc MainWindow_MarkingData_Title}" FontSize="16" Foreground="{StaticResource PrimaryColor}" VerticalAlignment="Center" Margin="0,20,0,0"/>

                    <Grid Margin="0,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsText, Converter={StaticResource BooleanToGridLengthConverter}}"/>
                            <RowDefinition Height="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsText, Converter={StaticResource BooleanToGridLengthConverter}}"/>
                            <RowDefinition Height="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsText, Converter={StaticResource InvertBooleanToGridLengthConverter}}"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumnGroup"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LastColumnGroup"/>
                        </Grid.ColumnDefinitions>

                        <!-- ALIGNMENT INPUT -->
                        <!--#region -->
                        <!--
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Vertical alignment" Style="{StaticResource LabelFormTextBlock}"/>

                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                            <RadioButton Style="{StaticResource TransparentToggledRadioButtonStyle}" Background="{StaticResource Gray242}">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource AlignVerticalBottomToggleButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                            </RadioButton>

                            <RadioButton Style="{StaticResource TransparentToggledRadioButtonStyle}" Background="{StaticResource Gray242}">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource AlignVerticalMiddleToggleButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                            </RadioButton>

                            <RadioButton Style="{StaticResource TransparentToggledRadioButtonStyle}" Background="{StaticResource Gray242}">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource AlignVerticalTopToggleButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                            </RadioButton>
                        </StackPanel>-->
                        <!--#endregion-->

                        <!-- TEXTE INPUT -->
                        <!--#region -->
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{local:Loc MainWindow_MarkingData_TextLabel}" Style="{StaticResource LabelFormTextBlock}"
                                   IsEnabled="{Binding ElementName=TextRadioButton, Path=IsChecked}"/>

                        <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}" Text="{local:Loc MainWindow_MarkingData_ParameterLinked}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.Text.IsLinkOn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <TextBox x:Name="InputTextTextBox" Grid.Row="0" Grid.Column="1" Style="{StaticResource NormalTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.Text.Value, Mode=TwoWay, Source={StaticResource Locator}}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.Text.IsLinkOn, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}"
                                 FontFamily="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedFont.FontFamily}"
                                 FontWeight="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsBold, Converter={StaticResource BooleanToFontWeightConverter}}"
                                 FontStyle="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsItalic, Converter={StaticResource BooleanToFontStyleConverter}}" />

                        <ToggleButton Grid.Row="0" Grid.Column="2" Style="{StaticResource NormalToggleButton}"
                                      IsChecked="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsBold, Mode=TwoWay}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource BoldToggleButtonIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </ToggleButton>

                        <ToggleButton x:Name="ItalicToggleButton" Grid.Row="0" Grid.Column="3" Style="{StaticResource NormalToggleButton}"
                                      IsChecked="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.IsItalic, Mode=TwoWay}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource ItalicToggleButtonIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </ToggleButton>
                        <!--#endregion-->

                        <!-- Police d'écriture -->
                        <!--#region -->
                        <TextBlock Grid.Row="1" Text="{local:Loc MainWindow_MarkingData_FontLabel}" Style="{StaticResource LabelFormTextBlock}" />

                        <ComboBox Grid.Row="1"
                                  Grid.Column="1"
                                  Margin="0,5,10,5"
                                  VerticalContentAlignment="Center"
                                  Padding="5,8,15,8"
                                  ItemsSource="{Binding FontViewModel.FontCollection.View, Source={StaticResource Locator}}"
                                  SelectedItem="{Binding FontViewModel.SelectedFont, Mode=TwoWay, Source={StaticResource Locator}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FontFamily}" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!-- FONT BUTTON -->
                        <Button x:Name="FontButton"
                                Grid.Row="1" Grid.Column="2"
                                Style="{StaticResource NormalButton}"
                                Click="FontButton_Click"
                                Command="{Binding Source={StaticResource Locator}, Path=FontViewModel.SendSelectedFontCommand}"
                                CommandParameter="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedFont}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource FontIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>
                        <!--#endregion-->


                        <!--ICON INPUT -->
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Icon" Style="{StaticResource LabelFormTextBlock}" />

                        <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}"
                                 Text="{Binding Source={StaticResource Locator}, Path=InputDataViewModel.MarkingData.Icon.Name}" />

                        <Button Grid.Row="2" Grid.Column="2"
                                x:Name="IconButton" Click="IconButton_Click"
                                Style="{StaticResource NormalButton}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SearchImageIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <!-- Hauteur de caractère -->
                        <TextBlock Grid.Row="3" Text="{local:Loc MainWindow_MarkingData_CharacterHeightLabel}" Style="{StaticResource LabelFormTextBlock}"/>

                        <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}" Text="{local:Loc MainWindow_MarkingData_ParameterLinked}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.CharacterHeight.IsLinkOn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <cc:TextBoxWithUnit Grid.Row="3" Grid.Column="1"
                                            Unit="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.LengthUnitSymbol}"
                                            Text="{Binding InputDataViewModel.MarkingData.CharacterHeight.Value, Mode=TwoWay, Source={StaticResource Locator}}"
                                            Visibility="{Binding InputDataViewModel.MarkingData.CharacterHeight.IsLinkOn, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>


                        <!-- Hauteur d'extrusion -->
                        <TextBlock Grid.Row="4" Text="{local:Loc MainWindow_MarkingData_ExtrusionHeightLabel}" Style="{StaticResource LabelFormTextBlock}"
                                   IsEnabled="{Binding Source={StaticResource Locator}, Path=SettingViewModel.CreateVolume}"/>

                        <TextBox Grid.Row="4" Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}" Text="{local:Loc MainWindow_MarkingData_ParameterLinked}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.ExtrusionHeight.IsLinkOn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <cc:TextBoxWithUnit Grid.Row="4" Grid.Column="1" VerticalContentAlignment="Center"
                                            Unit="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.LengthUnitSymbol}"
                                            Text="{Binding InputDataViewModel.MarkingData.ExtrusionHeight.Value, Mode=TwoWay, Source={StaticResource Locator}}"
                                            Visibility="{Binding InputDataViewModel.MarkingData.ExtrusionHeight.IsLinkOn, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}" 
                                            IsEnabled="{Binding Source={StaticResource Locator}, Path=SettingViewModel.CreateVolume}"/>

                        <Viewbox Grid.Row="4" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_MarkingData_ExtrusionHeightTooltip1}"/>
                                    <LineBreak/>
                                    <Run Text="{local:Loc MainWindow_MarkingData_ExtrusionHeightTooltip2}"/>
                                    <LineBreak/>
                                    <Run Text="{local:Loc MainWindow_MarkingData_ExtrusionHeightTooltip3}"/>
                                    <LineBreak/>
                                    <Run Text="{local:Loc MainWindow_MarkingData_ExtrusionHeightTooltip4}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>
                    </Grid>

                    <!-- POSITIONS -->
                    <TextBlock Grid.Row="5" Grid.ColumnSpan="4" Text="{local:Loc MainWindow_Position_Title}" FontSize="16" Foreground="{StaticResource PrimaryColor}" Margin="0,20,0,0"/>

                    <Grid Margin="0,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumnGroup"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LastColumnGroup"/>
                        </Grid.ColumnDefinitions>

                        <!-- SURFACE POSITION -->
                        <TextBlock Text="{local:Loc MainWindow_Position_SurfaceLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Column="1" Style="{StaticResource ReadOnlyTextBox}"
                               Text="{Binding InputDataViewModel.MarkingData.ProjectionSurfaceName, Source={StaticResource Locator}}"/>

                        <Button Grid.Column="2" Style="{DynamicResource NormalButton}"
                                Command="{Binding InputDataViewModel.SelectProjectionSurfaceCommand, Source={StaticResource Locator}}"
                                IsEnabled="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.IsApplicationOpen}"
                                Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip4}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>



                        <!-- TRACKING CURVE POSITION -->
                        <TextBlock Grid.Row="1" Text="{local:Loc MainWindow_Position_CurveLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Column="1" Grid.Row="1" Style="{StaticResource ReadOnlyTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.TrackingCurveName, Source={StaticResource Locator}}"/>

                        <Button Grid.Row="1" Grid.Column="2"  Style="{DynamicResource NormalButton}"
                                Command="{Binding InputDataViewModel.SelectTrackingCurveCommand, Source={StaticResource Locator}}"
                                IsEnabled="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.IsApplicationOpen}"
                                Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Row="1" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip4}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip5}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>

                        <!-- START POINT POSITION -->
                        <TextBlock Grid.Row="2" Text="{local:Loc MainWindow_Position_StartPointLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource ReadOnlyTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.StartPointName, Source={StaticResource Locator}}"/>

                        <Button Grid.Row="2" Grid.Column="2" Style="{DynamicResource NormalButton}"
                                Command="{Binding InputDataViewModel.SelectStartPointCommand, Source={StaticResource Locator}}"
                                IsEnabled="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.IsApplicationOpen}"
                                Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Row="2" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_Position_StartPointTooltip1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_StartPointTooltip2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_StartPointTooltip3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_StartPointTooltip4}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>

                        <!-- LOCAL AXIS POSITION -->
                        <TextBlock Grid.Row="3" Text="{local:Loc MainWindow_Position_LocalAxisSystemLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ReadOnlyTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.AxisSystemName, Source={StaticResource Locator}}"/>

                        <Button Grid.Row="3" Grid.Column="2" Style="{DynamicResource NormalButton}"
                                Command="{Binding InputDataViewModel.SelectLocalAxisSystemCommand, Source={StaticResource Locator}}"
                                IsEnabled="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.IsApplicationOpen}"
                                Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Row="3" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine4}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine5}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine6}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>

                    </Grid>

                </StackPanel>

            </ScrollViewer>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Margin="20,0,0,5">
                    <Run Text="{local:Loc MainWindow_CatiaStatus_Title}"/>
                    <Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{local:Loc MainWindow_CatiaStatus_Disconnected}"/>
                                <Setter Property="Foreground" Value="{StaticResource SecondaryColor}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.IsApplicationOpen}" Value="True">
                                        <Setter Property="Text" Value="{local:Loc MainWindow_CatiaStatus_Connected}"/>
                                        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run>
                    
                    <LineBreak/>
                    
                    <Run Text="{local:Loc MainWindow_CatiaStatus_LastRefresh}" FontSize="10"/>
                    <Run Text="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.LastRefreshTime, StringFormat=u}" Foreground="{StaticResource Gray127}" FontSize="10"/>
                    
                    <LineBreak/>
                    
                    <Run Text="{local:Loc MainWindow_CatiaStatus_Version}" FontSize="10"/>
                    <Run Text="{Binding Source={StaticResource Locator}, Path=CatiaViewModel.CatiaEnv.FullVersion}" FontSize="10" Foreground="{StaticResource Gray127}"/>

                </TextBlock>

                <Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{StaticResource Gray217}" Background="{StaticResource Gray242}">

                    <Grid Margin="15,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="SettingButton"
                                Style="{StaticResource NormalButtonDarker}"
                                Click="SettingButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource ParameterIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Button Grid.Column="1"
                                Style="{StaticResource NormalButtonDarker}"
                                Command="{Binding CatiaViewModel.RefreshCatiaApplicationCommand, Source={StaticResource Locator}}" Margin="5,0,0,0">
                            <StackPanel Orientation="Horizontal">

                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource Refresh_ButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>

                                <!--<TextBlock Text="Rafraichir" VerticalAlignment="Center" Margin="2,0,7,0"/>-->

                            </StackPanel>
                        </Button>

                        <Button Grid.Column="2" Style="{StaticResource HighlightButton}"
                                Content="{local:Loc MainWindow_General_Generate}"
                                FontSize="14" Padding="15,5" HorizontalAlignment="Right"
                                IsEnabled="{Binding InputDataViewModel.CanGenerate, Source={StaticResource Locator}}"
                                Command="{Binding InputDataViewModel.GenerateCommand, Source={StaticResource Locator}}"/>
                    </Grid>

                </Border>

            </Grid>

        </Grid>

        <view:SettingView x:Name="SettingView" Visibility="Collapsed"
                          BackButtonClicked="SettingView_BackButtonClicked" />

        <view:FontView x:Name="FontView" Visibility="Collapsed"
                       BackButtonClicked="FontView_BackButtonClicked"/>

        <view:DesignTableView x:Name="DesignTableView" Visibility="Collapsed"
                              BackButtonClicked="DesignTableView_BackButtonClicked" />

        <view:IconView x:Name="IconView" Visibility="Collapsed"
                       BackButtonClicked="IconView_BackButtonClicked"/>

        <view:ProcessView x:Name="StateView"
                        Visibility="{Binding StatusViewModel.IsOneStateActivated, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>


    </Grid>

</Window>
