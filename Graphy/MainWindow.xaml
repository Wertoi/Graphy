<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Graphy"
        xmlns:view="clr-namespace:Graphy.View"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Graphy.MainWindow"
        mc:Ignorable="d"
        Title="Graphy" Height="720" Width="500" WindowStartupLocation="CenterScreen" Icon="Icon/Graphy_Icon.ico">

    <Grid UseLayoutRounding="True">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Margin="20,25,20,0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Grid.IsSharedSizeScope="True">

                    <TextBlock Text="{local:Loc MainWindow_General_Title}" FontSize="18" Foreground="{StaticResource PrimaryColorDark}"/>

                    <TextBlock VerticalAlignment="Center" Margin="0,25,0,7">
                        <Run Text=">" Foreground="{StaticResource SecondaryColor}" FontWeight="Bold" />
                        <Run Text="{local:Loc MainWindow_SelectPart_Title}" />
                    </TextBlock>
                    <StackPanel Orientation="Horizontal" Margin="0">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,5,0,0"
                            Visibility="{Binding CatiaViewModel.IsPartDocumentCollectionEmpty, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}">

                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource NoDocumentIcon}"/>
                                </Canvas>
                            </Viewbox>

                            <TextBlock Text="{local:Loc MainWindow_SelectPart_NoPart}" Foreground="#FFA6A6A6" VerticalAlignment="Center"/>

                        </StackPanel>

                        <ComboBox ItemsSource="{Binding CatiaViewModel.PartDocumentCollection, Source={StaticResource Locator}, Mode=OneWay}"
                                  SelectedItem="{Binding CatiaViewModel.SelectedPartDocument, Source={StaticResource Locator}, Mode=TwoWay}" VerticalContentAlignment="Center" Padding="5,8,15,8"
                                  Visibility="{Binding CatiaViewModel.IsPartDocumentCollectionEmpty, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Rectangle Width="1" Fill="#FFBFBFBF" Margin="10,2,5,2"/>

                        <Button Style="{StaticResource NormalButton}"
                            Command="{Binding CatiaViewModel.RefreshCatiaApplicationCommand, Source={StaticResource Locator}}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource RefreshIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Button Style="{StaticResource NormalButton}" Margin="5,0,0,0"
                            Command="{Binding CatiaViewModel.OpenDocumentCommand, Source={StaticResource Locator}}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource OpenDocumentIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                    </StackPanel>


                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">

                        <TextBlock VerticalAlignment="Center" Margin="0,0,10,0">
                            <Run Text=">" Foreground="{StaticResource SecondaryColor}" FontWeight="Bold" />
                            <Run Text="{local:Loc MainWindow_CatalogPart_Title}"/>
                        </TextBlock>

                        <CheckBox IsChecked="{Binding InputDataViewModel.IsDesignTableActivated, Source={StaticResource Locator}}"
                                  Style="{StaticResource YesNoCheckBox}"/>

                        <Rectangle Width="1" Fill="#FFBFBFBF" Margin="15,2,5,2"/>

                        <Button x:Name="DesignTableButton" Click="DesignTableButton_Click"
                                IsEnabled="{Binding InputDataViewModel.IsDesignTableActivated, Source={StaticResource Locator}}"
                                Style="{StaticResource NormalButton}">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource LinkIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                    </StackPanel>

                    <TextBlock Text="{local:Loc MainWindow_MarkingData_Title}" FontSize="16" Foreground="{StaticResource PrimaryColor}" Margin="0,20,0,0"/>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumnGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="InputFieldColumnGroup"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- TEXTE INPUT -->
                        <TextBlock Text="{local:Loc MainWindow_MarkingData_TextLabel}" Style="{StaticResource LabelFormTextBlock}"/>

                        <TextBox Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}" Text="{local:Loc MainWindow_MarkingData_ParameterLinked}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.Text.IsLinkOn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <TextBox Grid.Column="1" Style="{StaticResource NormalTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.Text.Value, Mode=TwoWay, Source={StaticResource Locator}}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.Text.IsLinkOn, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}"
                                 FontFamily="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.FontFamily}"/>

                        <!-- Police d'écriture -->
                        <TextBlock Grid.Row="1" Text="{local:Loc MainWindow_MarkingData_FontLabel}" Style="{StaticResource LabelFormTextBlock}"/>

                        <Border Grid.Row="1" Grid.Column="1" Margin="0,5,10,5" BorderThickness="0,0,0,1" BorderBrush="#FFACACAC"
                                Visibility="{Binding FontViewModel.IsGeneratedFontCollectionEmpty, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}">

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource NoDocumentIcon}"/>
                                    </Canvas>
                                </Viewbox>

                                <TextBlock Text="{local:Loc MainWindow_MarkingData_NoFont}" Foreground="#FFA6A6A6" VerticalAlignment="Center"/>

                            </StackPanel>
                        </Border>

                        <ComboBox Grid.Row="1" Grid.Column="1" Margin="0,5,5,5"
                              ItemsSource="{Binding FontViewModel.GeneratedFontCollection, Source={StaticResource Locator}}"
                              SelectedItem="{Binding FontViewModel.SelectedGeneratedFont, Mode=TwoWay, Source={StaticResource Locator}}" VerticalContentAlignment="Center" Padding="5,8,15,8"
                              Visibility="{Binding FontViewModel.IsGeneratedFontCollectionEmpty, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                        <TextBlock Text="{Binding GeneratedFileVersion}" VerticalAlignment="Center" Foreground="{StaticResource Gray127}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!-- INFO ABOUT FONT SUPPORTED CHARACTERS -->
                        <Grid Grid.Row="1" Grid.Column="2"
                              Visibility="{Binding Source={StaticResource Locator}, Path=FontViewModel.IsGeneratedFontCollectionEmpty, Converter={StaticResource InvertBooleanToVisibilityConverter}}">

                            <!-- BUTTON TO COMPUTE IF NOT LOADED-->
                            <Button Style="{StaticResource NormalButton}"
                                    Visibility="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.IsCalculated, Converter={StaticResource InvertBooleanToVisibilityConverter}}"
                                    Command="{Binding Source={StaticResource Locator}, Path=FontViewModel.ComputeCharacterListCommand}"
                                    CommandParameter="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont}">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource UpdateButtonIcon}"/>
                                    </Canvas>
                                </Viewbox>
                                <Button.ToolTip>
                                    <TextBlock>
                                        <Run Text="Liste des charactères supportés non trouvée."/>
                                        <LineBreak/>
                                        <Run Text="Cliquer pour la recalculer."/>
                                    </TextBlock>
                                </Button.ToolTip>
                            </Button>


                            <!-- TOOLTIP IF INFORMATION IS AVALAIBLE -->
                            <ToggleButton x:Name="m_moreActionsToggleButton" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" Margin="0,6,3,6"
                                          IsHitTestVisible="{Binding ElementName=m_moreActionsPopup, Path=IsOpen,  Converter={StaticResource InvertBooleanConverter}}"
                                          HorizontalAlignment="Right" Style="{StaticResource NormalToggleButton}"
                                          Visibility="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.IsCalculated, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Viewbox Style="{StaticResource IconViewBox}">
                                    <Canvas Style="{StaticResource IconCanvas}">
                                        <Path Style="{StaticResource InfoIcon}"/>
                                    </Canvas>
                                </Viewbox>
                            </ToggleButton>

                            <!-- Menu Popup -->
                            <Popup x:Name="m_moreActionsPopup" IsOpen="{Binding ElementName=m_moreActionsToggleButton, Path=IsChecked, Mode=TwoWay}" Placement="Left"
                                   PlacementTarget="{Binding ElementName=m_moreActionsToggleButton}" StaysOpen="False" AllowsTransparency="True"
                                   HorizontalOffset="10" VerticalOffset="20" PopupAnimation="Fade" MinWidth="100">

                                <!-- Main Border -->
                                <Border x:Name="m_popupBorder" CornerRadius="5" Margin="0,0,4,4">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="2" Color="#FF757575"/>
                                    </Border.Effect>

                                    <Grid>
                                        <!-- Mask Border -->
                                        <Border x:Name="m_maskBorder" Background="White" CornerRadius="{Binding ElementName=m_popupBorder, Path=CornerRadius}" BorderThickness="0.5"/>

                                        <!-- Content -->
                                        <StackPanel Orientation="Vertical" Margin="10">
                                            <StackPanel.OpacityMask>
                                                <VisualBrush Visual="{Binding ElementName=m_maskBorder}"/>
                                            </StackPanel.OpacityMask>

                                            <TextBlock Text="Charactères supportés :"/>
                                            <TextBox Text="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.SupportedCharacterList}"
                                                     FontFamily="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.FontFamily}" 
                                                     TextWrapping="Wrap" MaxWidth="250" Foreground="{StaticResource Gray127}"
                                                     Style="{StaticResource ReadOnlyTextBox}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Popup>


                            <!--<Viewbox Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000"
                                     Visibility="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.IsCalculated, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Viewbox.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="200"
                                               FontFamily="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.FontFamily}">
                                    <Run Text="Charactères supportés :"/>
                                    <LineBreak/>
                                    <Run Text="{Binding Source={StaticResource Locator}, Path=FontViewModel.SelectedGeneratedFont.SupportedCharacterList}"/>
                                    </TextBlock>
                                </Viewbox.ToolTip>
                                <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                    <Path Style="{StaticResource InfoIcon}"/>
                                </Canvas>
                            </Viewbox>-->

                        </Grid>


                        <!-- Hauteur de caractère -->
                        <TextBlock Grid.Row="2" Text="{local:Loc MainWindow_MarkingData_CharacterHeightLabel}" Style="{StaticResource LabelFormTextBlock}"/>

                        <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}" Text="{local:Loc MainWindow_MarkingData_ParameterLinked}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.CharacterHeight.IsLinkOn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <local:TextBoxWithUnit Grid.Row="2" Grid.Column="1" Margin="0,0,10,0" VerticalContentAlignment="Center" MinWidth="140" Unit="mm"
                                               Text="{Binding InputDataViewModel.MarkingData.CharacterHeight.Value, Mode=TwoWay, Source={StaticResource Locator}}" VerticalAlignment="Center"
                                               Visibility="{Binding InputDataViewModel.MarkingData.CharacterHeight.IsLinkOn, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>


                        <!-- Hauteur d'extrusion -->
                        <TextBlock Grid.Row="3" Text="{local:Loc MainWindow_MarkingData_ExtrusionHeightLabel}" Style="{StaticResource LabelFormTextBlock}"/>

                        <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ReadOnlyUnderlignedTextBox}" Text="{local:Loc MainWindow_MarkingData_ParameterLinked}"
                                 Visibility="{Binding InputDataViewModel.MarkingData.ExtrusionHeight.IsLinkOn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <local:TextBoxWithUnit Grid.Row="4" Grid.Column="1" VerticalContentAlignment="Center" Margin="0,0,10,0" Unit="mm"
                                               Text="{Binding InputDataViewModel.MarkingData.ExtrusionHeight.Value, Mode=TwoWay, Source={StaticResource Locator}}" VerticalAlignment="Center"
                                               Visibility="{Binding InputDataViewModel.MarkingData.ExtrusionHeight.IsLinkOn, Converter={StaticResource InvertBooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

                        <Viewbox Grid.Row="3" Grid.Column="4" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock><Run Text="&quot;+&quot; pour ajouter le résultat au corps principal."/><LineBreak/><Run Text="&quot;-&quot; pour retirer le résultat au corps principal."/><LineBreak/><Run Text="/!\ Le sens d'extrusion se fait par rapport au sens de l'axe Z du &quot;Repère local&quot;."/></TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>
                    </Grid>

                    <!-- POSITIONS -->
                    <TextBlock Grid.Row="5" Grid.ColumnSpan="4" Text="{local:Loc MainWindow_Position_Title}" FontSize="16" Foreground="{StaticResource PrimaryColor}" Margin="0,20,0,0"/>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumnGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="InputFieldColumnGroup"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- SURFACE POSITION -->
                        <TextBlock Text="{local:Loc MainWindow_Position_SurfaceLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Column="1" Style="{StaticResource ReadOnlyTextBox}"
                               Text="{Binding InputDataViewModel.MarkingData.ProjectionSurfaceName, Source={StaticResource Locator}}"/>

                        <Button Grid.Column="2" Style="{DynamicResource NormalButton}"
                            Command="{Binding InputDataViewModel.SelectProjectionSurfaceCommand, Source={StaticResource Locator}}"
                            Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_ProjectionSurfaceTooltip4}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>



                        <!-- TRACKING CURVE POSITION -->
                        <TextBlock Grid.Row="1" Text="{local:Loc MainWindow_Position_CurveLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Column="1" Grid.Row="1" Style="{StaticResource ReadOnlyTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.TrackingCurveName, Source={StaticResource Locator}}"/>

                        <Button Grid.Row="1" Grid.Column="2"  Style="{DynamicResource NormalButton}"
                            Command="{Binding InputDataViewModel.SelectTrackingCurveCommand, Source={StaticResource Locator}}"
                            Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Row="1" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip4}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_TrackingCurveTooltip5}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>

                        <!-- START POINT POSITION -->
                        <TextBlock Grid.Row="2" Text="{local:Loc MainWindow_Position_StartPointLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource ReadOnlyTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.StartPointName, Source={StaticResource Locator}}"/>

                        <Button Grid.Row="2" Grid.Column="2" Style="{DynamicResource NormalButton}"
                            Command="{Binding InputDataViewModel.SelectStartPointCommand, Source={StaticResource Locator}}"
                            Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Row="2" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock>
                                    <Run Text="{local:Loc MainWindow_Position_StartPointTooltip1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_StartPointTooltip2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_StartPointTooltip3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_StartPointTooltip4}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>

                        <!-- LOCAL AXIS POSITION -->
                        <TextBlock Grid.Row="3" Text="{local:Loc MainWindow_Position_LocalAxisSystemLabel}" Style="{StaticResource LabelFormTextBlock}"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ReadOnlyTextBox}"
                                 Text="{Binding InputDataViewModel.MarkingData.AxisSystemName, Source={StaticResource Locator}}"/>

                        <Button Grid.Row="3" Grid.Column="2" Style="{DynamicResource NormalButton}"
                            Command="{Binding InputDataViewModel.SelectLocalAxisSystemCommand, Source={StaticResource Locator}}"
                            Click="SelectionButton_Click">
                            <Viewbox Style="{StaticResource IconViewBox}">
                                <Canvas Style="{StaticResource IconCanvas}">
                                    <Path Style="{StaticResource SelectIcon}"/>
                                </Canvas>
                            </Viewbox>
                        </Button>

                        <Viewbox Grid.Row="3" Grid.Column="3" Style="{StaticResource IconViewBox}" ToolTipService.ShowDuration="32000">
                            <Viewbox.ToolTip>
                                <TextBlock><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine1}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine2}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine3}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine4}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine5}"/>
                                    <LineBreak/><Run Text="{local:Loc MainWindow_Position_LocalAxisSystemTooltipLine6}"/>
                                </TextBlock>
                            </Viewbox.ToolTip>
                            <Canvas Style="{StaticResource IconCanvas}" Background="Transparent">
                                <Path Style="{StaticResource InfoIcon}"/>
                            </Canvas>
                        </Viewbox>

                    </Grid>

                </StackPanel>
            </ScrollViewer>

            <Rectangle Grid.Row="1" Height="1" Fill="#FFD9D9D9"/>

            <Grid Grid.Row="2" Background="#FFF2F2F2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="SettingButton" Margin="15,5,0,5" Style="{StaticResource NormalButtonDarker}" Click="SettingButton_Click" HorizontalAlignment="Left">
                    <Viewbox Style="{StaticResource IconViewBox}">
                        <Canvas Style="{StaticResource IconCanvas}">
                            <Path Style="{StaticResource ParameterIcon}"/>
                        </Canvas>
                    </Viewbox>
                </Button>

                <Button Grid.Column="1" Style="{StaticResource NormalButtonDarker}" Content="{local:Loc MainWindow_General_Generate}"
                        Margin="0,10,15,10" FontSize="14" Padding="15,5" HorizontalAlignment="Right"
                        IsEnabled="{Binding InputDataViewModel.CanGenerate, Source={StaticResource Locator}}"
                        Command="{Binding InputDataViewModel.GenerateCommand, Source={StaticResource Locator}}"/>
            </Grid>
        </Grid>

        <view:SettingView x:Name="SettingView" Visibility="Collapsed"
                          BackButtonClicked="SettingView_BackButtonClicked"
                          ShowAddNewFont="SettingView_ShowAddNewFont" />

        <view:NewFontView x:Name="NewFontView" Visibility="Collapsed" BackButtonClicked="NewFontView_BackButtonClicked"/>

        <view:DesignTableView x:Name="DesignTableView" Visibility="Collapsed" BackButtonClicked="DesignTableView_BackButtonClicked" />

        <view:StateView x:Name="StateView" QuitButtonClicked="StateView_QuitButtonClicked"
                        Visibility="{Binding StatusViewModel.IsOneStateActivated, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}"/>

    </Grid>
</Window>
