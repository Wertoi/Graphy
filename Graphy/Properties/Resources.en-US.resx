<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckBox_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="CheckBox_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Language_English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Language_French" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="Marking_GenerateText" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="MarkingData_CharacterHeightLabel" xml:space="preserve">
    <value>Characters height</value>
  </data>
  <data name="MarkingData_ExtrusionHeightLabel" xml:space="preserve">
    <value>Extrusion height</value>
  </data>
  <data name="MarkingData_FontLabel" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="MarkingData_TextLabel" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="MarkingData_Title" xml:space="preserve">
    <value>Marking data</value>
  </data>
  <data name="Position_CurveLabel" xml:space="preserve">
    <value>Tracking curve</value>
  </data>
  <data name="Position_LocalAxisSystemLabel" xml:space="preserve">
    <value>Local axis system</value>
  </data>
  <data name="Position_LocalAxisSystemTooltipLine1" xml:space="preserve">
    <value>Axis system defining marking directions.</value>
  </data>
  <data name="Position_LocalAxisSystemTooltipLine2" xml:space="preserve">
    <value>"Axis system" must have an unique name.</value>
  </data>
  <data name="Position_LocalAxisSystemTooltipLine3" xml:space="preserve">
    <value>The axis system origin must be "Reference Point".</value>
  </data>
  <data name="Position_LocalAxisSystemTooltipLine4" xml:space="preserve">
    <value>- The X axis must be the tangent to "Tracking curve" passing by its origin. Its direction points the marking direction.</value>
  </data>
  <data name="Position_LocalAxisSystemTooltipLine5" xml:space="preserve">
    <value>- The Y axis is the results of X and Z axis. Its direction points the characters direction.</value>
  </data>
  <data name="Position_LocalAxisSystemTooltipLine6" xml:space="preserve">
    <value>- The Z axis must be the normal to "Projection surface" passing by its origin. Its direction points the material adding direction.</value>
  </data>
  <data name="Position_ProjectionSurfaceTooltip1" xml:space="preserve">
    <value>Marking projection surface.</value>
  </data>
  <data name="Position_ProjectionSurfaceTooltip2" xml:space="preserve">
    <value>"Projection surface" must have an unique name.</value>
  </data>
  <data name="Position_ProjectionSurfaceTooltip3" xml:space="preserve">
    <value>/!\ Selection from volumes not handled.</value>
  </data>
  <data name="Position_ProjectionSurfaceTooltip4" xml:space="preserve">
    <value>/!\ All "Projection surface" sub surfaces must have the same natural normal.</value>
  </data>
  <data name="Position_ReferencePointLabel" xml:space="preserve">
    <value>Reference point</value>
  </data>
  <data name="Position_ReferencePointTooltip1" xml:space="preserve">
    <value>Marking reference point.</value>
  </data>
  <data name="Position_ReferencePointTooltip2" xml:space="preserve">
    <value>"Start point" must have an unique name.</value>
  </data>
  <data name="Position_ReferencePointTooltip3" xml:space="preserve">
    <value>"Start point" must be on the "Tracking curve" and on the "Projection surface".</value>
  </data>
  <data name="Position_ReferencePointTooltip4" xml:space="preserve">
    <value>/!\ Selection from volumes not handled.</value>
  </data>
  <data name="Position_SurfaceLabel" xml:space="preserve">
    <value>Projection surface</value>
  </data>
  <data name="Position_Title" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Position_TrackingCurveTooltip1" xml:space="preserve">
    <value>Marking tracking curve.</value>
  </data>
  <data name="Position_TrackingCurveTooltip2" xml:space="preserve">
    <value>"Tracking curve" must have an unique name.</value>
  </data>
  <data name="Position_TrackingCurveTooltip3" xml:space="preserve">
    <value>"Tracking curve" must be on "Projection surface".</value>
  </data>
  <data name="Position_TrackingCurveTooltip4" xml:space="preserve">
    <value>/!\ Selection from volumes not handled.</value>
  </data>
  <data name="Position_TrackingCurveTooltip5" xml:space="preserve">
    <value>/!\ All "Tracking curve" segments must have the same natural direction.</value>
  </data>
  <data name="SelectPart_NoPart" xml:space="preserve">
    <value>No .CATPart</value>
  </data>
  <data name="SelectPart_Title" xml:space="preserve">
    <value>Select the working part</value>
  </data>
  <data name="Settings_About_Licenses" xml:space="preserve">
    <value>Licenses</value>
  </data>
  <data name="Settings_General_LanguageLabel" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Settings_General_Title" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="Exception_Title" xml:space="preserve">
    <value>An exception has occured !</value>
  </data>
  <data name="InProgress_Title" xml:space="preserve">
    <value>In progress !</value>
  </data>
  <data name="CatiaStatus_Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="CatiaStatus_Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="CatiaStatus_LastRefresh" xml:space="preserve">
    <value>Last refresh: </value>
  </data>
  <data name="CatiaStatus_Title" xml:space="preserve">
    <value>Catia status: </value>
  </data>
  <data name="CatiaStatus_Version" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="MarkingData_ExtrusionHeightTooltip1" xml:space="preserve">
    <value>The option "Generate a marking volume" must be actived.</value>
  </data>
  <data name="MarkingData_ExtrusionHeightTooltip2" xml:space="preserve">
    <value>"+" to add the result to the main body.</value>
  </data>
  <data name="MarkingData_ExtrusionHeightTooltip3" xml:space="preserve">
    <value>"-" to take out the result to the main body.</value>
  </data>
  <data name="MarkingData_ExtrusionHeightTooltip4" xml:space="preserve">
    <value>/!\ The extrusion direction is calculated depending on the Z-axis direction of the "Axis system".</value>
  </data>
  <data name="Settings_Marking_CreateVolumeLabel" xml:space="preserve">
    <value>Generate a marking volume</value>
  </data>
  <data name="Settings_Marking_KeepHistoricLabel" xml:space="preserve">
    <value>Keep the construction historic</value>
  </data>
  <data name="Settings_Marking_Title" xml:space="preserve">
    <value>Marking</value>
  </data>
  <data name="Settings_Marking_ToleranceFactorLabel" xml:space="preserve">
    <value>Tolerance factor</value>
  </data>
  <data name="Icon_Add" xml:space="preserve">
    <value>Add an icon</value>
  </data>
  <data name="Icon_SelectedIcon_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Icon_SelectedIcon_Draw" xml:space="preserve">
    <value>Draw</value>
  </data>
  <data name="Icon_SelectedIcon_GeometryData" xml:space="preserve">
    <value>Geometry data</value>
  </data>
  <data name="Icon_SelectedIcon_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Icon_SelectedIcon_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Icon_Title" xml:space="preserve">
    <value>Icon management</value>
  </data>
  <data name="MarkingData_IconLabel" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="MarkingData_MarkingTypeIcon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="MarkingData_MarkingTypeLabel" xml:space="preserve">
    <value>Type of marking:</value>
  </data>
  <data name="MarkingData_MarkingTypeText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ImportMode_Add" xml:space="preserve">
    <value>Add to collection</value>
  </data>
  <data name="ImportMode_Replace" xml:space="preserve">
    <value>Replace collection</value>
  </data>
  <data name="Catia_Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ComplexMarking_Inputs_Refresh" xml:space="preserve">
    <value>Rafraichir</value>
  </data>
  <data name="MarkingData_AlignmentLabel" xml:space="preserve">
    <value>Alignments</value>
  </data>
  <data name="MarkingData_TextStyleLabel" xml:space="preserve">
    <value>Text styles</value>
  </data>
</root>